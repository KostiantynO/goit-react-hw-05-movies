{"version":3,"file":"static/js/386.28ab0c6e.chunk.js","mappings":"2TAOQA,EAAsCC,EAAAA,GAAAA,KAAhCC,EAAgCD,EAAAA,GAAAA,QAAvBE,EAAuBF,EAAAA,GAAAA,SAAbG,EAAaH,EAAAA,GAAAA,SAEjCI,EAAa,WAAO,IAAD,MAC9B,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BF,EAAAA,EAAAA,UAASN,GAArC,eAAOS,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAeN,EAAAA,EAAAA,UAAS,GAAjBO,GAAP,eAEMC,GAAWC,EAAAA,EAAAA,MACjB,GAAuBC,EAAAA,EAAAA,MACjBC,GADN,eAC2BC,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAEA,IAAMG,EAAS,mCAAG,6FAChBV,EAAUR,GADM,mBAGgBmB,EAAAA,EAAAA,IAAkBJ,EAAOJ,GAHzC,OAIV,QADES,EAHQ,cAIV,IAACA,GAAD,UAACA,EAAiBC,eAAlB,OAAC,EAA0BC,SAC7BC,EAAAA,EAAAA,IAAM,kBAAD,OAAmBR,IAG1BT,EAAgBc,GAChBZ,EAAUP,GATI,mDAWdsB,EAAAA,EAAAA,IAAM,wBAAD,OAAyBR,EAAzB,gCACLL,EAAS,EAAD,IACRF,EAAUN,GAbI,0DAAH,qDAiBfgB,OACC,CAACP,EAAMI,KAEVE,EAAAA,EAAAA,YAAU,WACR,OAAO,WAELP,EAAS,SAEV,IAEH,IAAMc,GAA+B,OAAZnB,QAAY,IAAZA,GAAA,UAAAA,EAAcgB,eAAd,eAAuBC,QAAS,EACnDG,EAAS,iBAAGb,QAAH,IAAGA,GAAH,UAAGA,EAAUc,aAAb,aAAG,EAAiBC,YAApB,QAA4B,IAE3C,OACE,4BACE,UAAC,EAAAC,UAAD,YACE,SAAC,EAAAC,UAAD,CAAWtB,OAAQA,KAEnB,SAAC,EAAAuB,WAAD,CAAYC,GAAIN,EAAhB,6BAEEhB,IACA,SAAC,EAAAuB,QAAD,UACGR,IAAoB,SAAC,EAAAS,WAAD,CAAYC,MAAO7B,EAAagB,gBAK3D,SAAC,EAAAc,SAAD,CAAUC,SAAS,GAAnB,UACE,SAAC,KAAD,W,6FChEKN,GAAaO,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAH","sources":["pages/MoviesPage/MoviesPage.js","pages/MoviesPage/MoviesPage.styled.js"],"sourcesContent":["import { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useLocation, useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { fetchSearchMovies } from 'apis/tmdb-api';\nimport { Status } from 'utils';\nimport { Container, Searchbar, MoviesList, Section } from 'components';\nimport { GoBackLink } from './MoviesPage.styled';\nconst { IDLE, PENDING, RESOLVED, REJECTED } = Status;\n\nexport const MoviesPage = () => {\n  const [searchMovies, setSearchMovies] = useState(null);\n  const [status, setStatus] = useState(IDLE);\n  const [error, setError] = useState(null);\n  const [page] = useState(1);\n\n  const location = useLocation();\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n\n    const getMovies = async () => {\n      setStatus(PENDING);\n      try {\n        const newSearchMovies = await fetchSearchMovies(query, page);\n        if (!newSearchMovies?.results?.length) {\n          toast(`No results for ${query}`);\n        }\n\n        setSearchMovies(newSearchMovies);\n        setStatus(RESOLVED);\n      } catch (error) {\n        toast(`Error while fetching ${query}. Please try another search`);\n        setError(error);\n        setStatus(REJECTED);\n      }\n    };\n\n    getMovies();\n  }, [page, query]);\n\n  useEffect(() => {\n    return () => {\n      // setSearchMovies(null);\n      setError(null);\n    };\n  }, []);\n\n  const hasRequestMovies = searchMovies?.results?.length > 0;\n  const goBackURL = location?.state?.from ?? '/';\n\n  return (\n    <div>\n      <Container>\n        <Searchbar status={status} />\n\n        <GoBackLink to={goBackURL}>&lArr; Go back</GoBackLink>\n\n        {!error && (\n          <Section>\n            {hasRequestMovies && <MoviesList items={searchMovies.results} />}\n          </Section>\n        )}\n      </Container>\n\n      <Suspense fallback=\"\">\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const GoBackLink = styled(Link)`\n  display: inline-flex;\n  padding: 12px 12px;\n  margin-top: 12px;\n  margin-bottom: 12px;\n`;\n"],"names":["IDLE","Status","PENDING","RESOLVED","REJECTED","MoviesPage","useState","searchMovies","setSearchMovies","status","setStatus","error","setError","page","location","useLocation","useSearchParams","query","get","useEffect","getMovies","fetchSearchMovies","newSearchMovies","results","length","toast","hasRequestMovies","goBackURL","state","from","Container","Searchbar","GoBackLink","to","Section","MoviesList","items","Suspense","fallback","styled","Link"],"sourceRoot":""}