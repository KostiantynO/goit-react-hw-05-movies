{"version":3,"file":"static/js/342.12f54e79.chunk.js","mappings":"uTAOQA,EAAsCC,EAAAA,GAAAA,KAAhCC,EAAgCD,EAAAA,GAAAA,QAAvBE,EAAuBF,EAAAA,GAAAA,SAAbG,EAAaH,EAAAA,GAAAA,SAEjCI,EAAa,WAAO,IAAD,MAC9B,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAASN,GAArC,eAAOW,EAAP,KAAeC,EAAf,KACA,GAA0BN,EAAAA,EAAAA,UAAS,MAAnC,eAAOO,EAAP,KAAcC,EAAd,KACA,GAAeR,EAAAA,EAAAA,UAAS,GAAjBS,GAAP,eAEMC,GAAWC,EAAAA,EAAAA,MACXC,EAAc,IAAIC,gBAAgBH,EAASI,QAAQC,IAAI,UAE7DC,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVb,EAIF,OAHAD,EAAgB,MAChBI,EAAUZ,QACVc,EAAS,MAIX,IAAMS,EAAS,mCAAG,6FAChBX,EAAUV,GADM,mBAGgBsB,EAAAA,EAAAA,IAAkBf,EAAOM,GAHzC,OAIV,QADEU,EAHQ,cAIV,IAACA,GAAD,UAACA,EAAiBC,eAAlB,OAAC,EAA0BC,SAC7BC,EAAAA,EAAAA,IAAM,kBAAD,OAAmBnB,IAG1BD,EAAgBiB,GAChBb,EAAUT,GATI,mDAWdyB,EAAAA,EAAAA,IAAM,wBAAD,OAAyBnB,EAAzB,gCACLK,EAAS,EAAD,IACRF,EAAUR,GAbI,0DAAH,qDAiBfmB,MACC,CAACP,EAAUD,EAAMN,EAAOS,EAAaN,KAExCU,EAAAA,EAAAA,YAAU,WACR,OAAO,WACLd,EAAgB,MAChBqB,QAAQC,IAAI,2BAEb,IAEH,IAAMC,GAA+B,OAAZxB,QAAY,IAAZA,GAAA,UAAAA,EAAcmB,eAAd,eAAuBC,QAAS,EACnDK,EAAS,iBAAGhB,QAAH,IAAGA,GAAH,UAAGA,EAAUiB,aAAb,aAAG,EAAiBC,YAApB,QAA4B,IAE3C,OACE,4BACE,UAAC,EAAAC,UAAD,YACE,SAAC,EAAAC,UAAD,CAAWC,SAAU3B,EAAUC,OAAQA,KAEvC,SAAC,EAAA2B,WAAD,CAAYC,GAAIP,EAAhB,6BAEEnB,IACA,SAAC,EAAA2B,QAAD,UACGT,IAAoB,SAAC,EAAAU,WAAD,CAAYC,MAAOnC,EAAamB,gBAK3D,SAAC,KAAD,S,8FCpEOY,GAAaK,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAH,sH","sources":["pages/MoviesPage/MoviesPage.js","pages/MoviesPage/MoviesPage.styled.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { fetchSearchMovies } from 'apis/tmdb-api';\nimport { toast } from 'react-toastify';\nimport { Container, Searchbar, MoviesList, Section } from 'components';\nimport { Status } from 'utils';\nimport { GoBackLink } from './MoviesPage.styled';\nconst { IDLE, PENDING, RESOLVED, REJECTED } = Status;\n\nexport const MoviesPage = () => {\n  const [searchMovies, setSearchMovies] = useState(null);\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState(IDLE);\n  const [error, setError] = useState(null);\n  const [page] = useState(1);\n\n  const location = useLocation();\n  const searchQuery = new URLSearchParams(location.search).get('query');\n\n  useEffect(() => {\n    if (query === '') {\n      setSearchMovies(null);\n      setStatus(IDLE);\n      setError(null);\n      return;\n    }\n\n    const getMovies = async () => {\n      setStatus(PENDING);\n      try {\n        const newSearchMovies = await fetchSearchMovies(query, page);\n        if (!newSearchMovies?.results?.length) {\n          toast(`No results for ${query}`);\n        }\n\n        setSearchMovies(newSearchMovies);\n        setStatus(RESOLVED);\n      } catch (error) {\n        toast(`Error while fetching ${query}. Please try another search`);\n        setError(error);\n        setStatus(REJECTED);\n      }\n    };\n\n    getMovies();\n  }, [location, page, query, searchQuery, setStatus]);\n\n  useEffect(() => {\n    return () => {\n      setSearchMovies(null);\n      console.log('MoviesPage UNmounted');\n    };\n  }, []);\n\n  const hasRequestMovies = searchMovies?.results?.length > 0;\n  const goBackURL = location?.state?.from ?? '/';\n\n  return (\n    <div>\n      <Container>\n        <Searchbar onSubmit={setQuery} status={status} />\n\n        <GoBackLink to={goBackURL}>&lArr; Go back</GoBackLink>\n\n        {!error && (\n          <Section>\n            {hasRequestMovies && <MoviesList items={searchMovies.results} />}\n          </Section>\n        )}\n      </Container>\n\n      <Outlet />\n    </div>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const GoBackLink = styled(Link)`\n  display: inline-flex;\n  padding: 12px 12px;\n  margin-top: 12px;\n  margin-bottom: 12px;\n`;\n"],"names":["IDLE","Status","PENDING","RESOLVED","REJECTED","MoviesPage","useState","searchMovies","setSearchMovies","query","setQuery","status","setStatus","error","setError","page","location","useLocation","searchQuery","URLSearchParams","search","get","useEffect","getMovies","fetchSearchMovies","newSearchMovies","results","length","toast","console","log","hasRequestMovies","goBackURL","state","from","Container","Searchbar","onSubmit","GoBackLink","to","Section","MoviesList","items","styled","Link"],"sourceRoot":""}